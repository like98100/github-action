# .github/workflows/java-to-ec2.yml
name: Java EC2 Deploy

on:
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest

    env: #노출되도 상관없는 환경변수
      APP_NAME: next-0.0.1-SNAPSHOT.jar
      SCRIPT_NAME: run.sh
      DEPLOY_DIR: /home/ec2-user/app
      SCRIPT_DIR: /home/ec2-user/app/script

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle (skip tests)
        run: ./gradlew build -x test

      - name: Check if JAR file exists
        run: |
          ls -la build/libs/
          echo "Checking for JAR file: ${{ env.APP_NAME }}"
          [ -f "build/libs/${{ env.APP_NAME }}" ] && echo "JAR file exists" || echo "JAR file does not exist"

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }} #노출되면 안되는 환경변수 -> secrets.~
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: build/libs/${{ env.APP_NAME }} #로컬에 있는 소스 주소
          target: ${{ env.DEPLOY_DIR }} #타겟 원격 ec2

      - name: Copy run script to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: script/${{ env.SCRIPT_NAME }}
          target: ${{ env.DEPLOY_DIR }}

      - name: Execute run script on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |   # | -> 순차적으로 명령 실행
            chmod +x ${{env.SCRIPT_DIR}}/run.sh
            ${{env.SCRIPT_DIR}}/run.sh
